name: Android CI

on: # See workflow_dispatch for manual build
  workflow_dispatch:
  push:
    branches: [ main ]  # "release/*" ?, [skip ci]
    # paths-ignore:
    #- '.github/workflows/*'
  pull_request:
    branches: [ main ]

jobs:
  Build: # First job, define more with same indentation. Jobs run in parallel. Consider sequential?

    runs-on: ubuntu-latest # Every job gets its own runner - own virtual machine, totally isolated!

    steps: # Every job requires its own steps

      - name: Checkout code  # Get the code
        uses: actions/checkout@v3 # Actions = normal commands managed by the GitHub Team. Identifier 'actions/checkout@v2', might be different versions in the future

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew # Own shell command compare to 'uses' 'actions/'

      - name: Run tests
        run: ./gradlew test # Failing a test will fail the workflow

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: Debug App # Name to be given to the artifact produced
          path: app/build/outputs/apk/debug/app-debug.apk # Path where the artifact should be loaded from

      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: Release App
          path: app/build/outputs/apk/release/app-release-unsigned.apk

  Download:

    needs: Build # Previous job has to be completed successfully, parallel or sequential?

    runs-on: ubuntu-latest

    steps:

      - name: Get debug artifact
        uses: actions/download-artifact@v3
        with:
          name: Debug App

      - name: Get release artifact
        uses: actions/download-artifact@v3
        with:
          name: Release App

      - name: Output contents
        run: ls
